(function(){"use strict";try{if(typeof document<"u"){var e=document.createElement("style");e.appendChild(document.createTextNode(".option-switcher-wrapper[data-v-0078221a]{display:flex;flex-direction:column;align-items:center;justify-content:center;padding:20px}.option-switcher[data-v-0078221a]{display:flex;align-items:center;justify-content:center;margin-top:20px}.current-option[data-v-0078221a]{font-size:1.5em;margin:0 20px}")),document.head.appendChild(e)}}catch(t){console.error("vite-plugin-css-injected-by-js",t)}})();
(function(i,e){typeof exports=="object"&&typeof module<"u"?e(exports,require("vue")):typeof define=="function"&&define.amd?define(["exports","vue"],e):(i=typeof globalThis<"u"?globalThis:i||self,e(i["ui-switch-options"]={},i.Vue))})(this,function(i,e){"use strict";const d=(t,o)=>{const n=t.__vccOpts||t;for(const[p,r]of o)n[p]=r;return n},h={name:"UISwitchOptions",inject:["$socket"],props:{id:{type:String,required:!0},props:{type:Object,default:()=>({})},state:{type:Object,default:()=>({enabled:!1,visible:!1})},label:{type:String,default:""},prevIcon:{type:String,default:"chevron-double-left"},nextIcon:{type:String,default:"chevron-double-right"},iconColor:{type:String,default:"white"},iconSize:{type:String,default:void 0},buttonColor:{type:String,default:""}},data(){return{currentOptionIndex:0,options:Array.isArray(this.props.options)?this.props.options:[]}},watch:{label(t){this.currentOptionLabel=t},options(t){t.length>0&&this.currentOptionIndex>=t.length&&(this.currentOptionIndex=t.length-1)},currentOptionLabel(t){this.options.length>0&&this.options[this.currentOptionIndex]&&(this.currentOptionLabel=this.options[this.currentOptionIndex].label||"No option available")}},computed:{currentOptionLabel(){return this.options.length>0&&this.options[this.currentOptionIndex]?this.options[this.currentOptionIndex].label:"No option available"},currentOptionValue(){return this.options.length>0?this.options[this.currentOptionIndex].value:"No options"},buttonStyle(){return t=>{const o=t===""?void 0:t;return{"box-shadow":o==="transparent"?"none":"","background-color":o||"undefined"}}}},methods:{sendNewOptions(t){this.$socket.emit("new-options",{id:this.id,options:t})},switchOption(t){const o=this.currentOptionIndex;t==="next"?this.currentOptionIndex=(this.currentOptionIndex+1)%this.options.length:t==="prev"&&(this.currentOptionIndex=(this.currentOptionIndex-1+this.options.length)%this.options.length),this.currentOptionIndex!==o&&(this.$socket.emit("switch-option",this.id,this.currentOptionValue),console.log(`Switched to new option: ${this.currentOptionValue}`))},updateFromBackend(t){if(console.log("Updating from backend:",t),t.options&&Array.isArray(t.options)&&(this.options=[...t.options]),t.payload){const o=this.options.findIndex(n=>n.value===t.payload);o!==-1?(this.currentOptionIndex=o,console.log(`Option updated to: ${this.options[o].label}`)):console.warn("Option not found in options array")}this.$forceUpdate()},refreshOptions(){this.$socket.emit("widget-load",this.id)}},mounted(){if(!this.$socket){console.error("Socket connection is not available.");return}this.$socket.on(`widget-load:${this.id}`,t=>{t&&(t.currentOptionIndex!==void 0&&(this.currentOptionIndex=t.currentOptionIndex,console.log(`Loaded currentOptionIndex from backend: ${this.currentOptionIndex}`)),Array.isArray(t.options)&&(this.options=t.options,console.log("Loaded options from backend:",this.options)))}),this.refreshOptions(),console.log(`Subscribing to socket with event id: msg-input:${this.id}`),this.$socket.on(`msg-input:${this.id}`,t=>{console.log("Received message in Vue:",t),t&&t.payload&&this.updateFromBackend(t),t&&Array.isArray(t.options)&&(this.updateFromBackend(t),this.sendNewOptions(t.options))})},beforeUnmount(){this.$socket&&this.$socket.off(this.id)},unmounted(){this.$socket.off("widget-load:"+this.id)}},a={class:"option-switcher-wrapper"},u=["innerHTML"],f={class:"option-switcher"},b=["innerHTML"];function O(t,o,n,p,r,s){const c=e.resolveComponent("v-icon"),l=e.resolveComponent("v-btn");return e.openBlock(),e.createElementBlock("div",a,[e.createElementVNode("h2",{innerHTML:n.props.label||""},null,8,u),e.createElementVNode("div",f,[e.createVNode(l,{onClick:o[0]||(o[0]=y=>s.switchOption("prev")),disabled:r.options.length<=1,style:e.normalizeStyle(s.buttonStyle(n.props.buttonColor))},{default:e.withCtx(()=>[e.createVNode(c,{color:n.props.iconColor,size:n.props.iconSize},{default:e.withCtx(()=>[e.createTextVNode(e.toDisplayString("mdi-"+n.props.prevIcon),1)]),_:1},8,["color","size"])]),_:1},8,["disabled","style"]),e.createElementVNode("span",{class:"current-option",innerHTML:s.currentOptionLabel},null,8,b),e.createVNode(l,{onClick:o[1]||(o[1]=y=>s.switchOption("next")),disabled:r.options.length<=1,style:e.normalizeStyle(s.buttonStyle(n.props.buttonColor))},{default:e.withCtx(()=>[e.createVNode(c,{color:n.props.iconColor,size:n.props.iconSize},{default:e.withCtx(()=>[e.createTextVNode(e.toDisplayString("mdi-"+n.props.nextIcon),1)]),_:1},8,["color","size"])]),_:1},8,["disabled","style"])])])}const x=d(h,[["render",O],["__scopeId","data-v-0078221a"]]);i.UISwitchOptions=x,Object.defineProperty(i,Symbol.toStringTag,{value:"Module"})});
